// <auto-generated />
using Company.Data.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Company.Data.Migrations
{
    [DbContext(typeof(CompanyContext))]
    partial class CompanyContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Company.Data.Entities.CompanyInfo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("OrgNum")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("CompanyInfos");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Nordic Hair Sweden",
                            OrgNum = 55656667
                        },
                        new
                        {
                            Id = 2,
                            Name = "Nordic Hair Norway",
                            OrgNum = 65757777
                        });
                });

            modelBuilder.Entity("Company.Data.Entities.Department", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("CompanyId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("CompanyId");

                    b.ToTable("Departments");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CompanyId = 1,
                            Name = "Administration-SE"
                        },
                        new
                        {
                            Id = 2,
                            CompanyId = 1,
                            Name = "Finance-SE"
                        },
                        new
                        {
                            Id = 3,
                            CompanyId = 2,
                            Name = "Marketing-No"
                        },
                        new
                        {
                            Id = 4,
                            CompanyId = 2,
                            Name = "Purchase-No"
                        },
                        new
                        {
                            Id = 5,
                            CompanyId = 1,
                            Name = "Logistik-SE"
                        },
                        new
                        {
                            Id = 6,
                            CompanyId = 1,
                            Name = "IT-SE"
                        },
                        new
                        {
                            Id = 7,
                            CompanyId = 1,
                            Name = "Production-SE"
                        });
                });

            modelBuilder.Entity("Company.Data.Entities.Employee", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("DepartmentId")
                        .HasColumnType("int");

                    b.Property<string>("FirtName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("HasUnion")
                        .HasColumnType("bit");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<double>("Salary")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("DepartmentId");

                    b.ToTable("Employees");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DepartmentId = 1,
                            FirtName = "Jon",
                            HasUnion = true,
                            LastName = "Doe",
                            Salary = 40000.0
                        },
                        new
                        {
                            Id = 2,
                            DepartmentId = 2,
                            FirtName = "Sara",
                            HasUnion = true,
                            LastName = "Smith",
                            Salary = 45000.0
                        },
                        new
                        {
                            Id = 3,
                            DepartmentId = 2,
                            FirtName = "Alex",
                            HasUnion = true,
                            LastName = "Larssen",
                            Salary = 45000.0
                        },
                        new
                        {
                            Id = 4,
                            DepartmentId = 3,
                            FirtName = "Fredrik",
                            HasUnion = true,
                            LastName = "Nilsson",
                            Salary = 50000.0
                        },
                        new
                        {
                            Id = 5,
                            DepartmentId = 4,
                            FirtName = "Eva",
                            HasUnion = true,
                            LastName = "Olsson",
                            Salary = 47000.0
                        },
                        new
                        {
                            Id = 6,
                            DepartmentId = 5,
                            FirtName = "Isac",
                            HasUnion = true,
                            LastName = "Freja",
                            Salary = 38000.0
                        },
                        new
                        {
                            Id = 7,
                            DepartmentId = 6,
                            FirtName = "Jonas",
                            HasUnion = true,
                            LastName = "Axelsson",
                            Salary = 48000.0
                        },
                        new
                        {
                            Id = 8,
                            DepartmentId = 7,
                            FirtName = "David",
                            HasUnion = true,
                            LastName = "Adams",
                            Salary = 39000.0
                        });
                });

            modelBuilder.Entity("Company.Data.Entities.EmployeeTitle", b =>
                {
                    b.Property<int>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<int>("TitleId")
                        .HasColumnType("int");

                    b.HasKey("EmployeeId", "TitleId");

                    b.HasIndex("TitleId");

                    b.ToTable("EmployeeTitles");

                    b.HasData(
                        new
                        {
                            EmployeeId = 1,
                            TitleId = 3
                        },
                        new
                        {
                            EmployeeId = 2,
                            TitleId = 4
                        },
                        new
                        {
                            EmployeeId = 3,
                            TitleId = 5
                        },
                        new
                        {
                            EmployeeId = 4,
                            TitleId = 2
                        },
                        new
                        {
                            EmployeeId = 5,
                            TitleId = 1
                        },
                        new
                        {
                            EmployeeId = 6,
                            TitleId = 8
                        },
                        new
                        {
                            EmployeeId = 6,
                            TitleId = 7
                        },
                        new
                        {
                            EmployeeId = 8,
                            TitleId = 3
                        });
                });

            modelBuilder.Entity("Company.Data.Entities.Title", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("TitleName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Titles");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            TitleName = "Teamlead"
                        },
                        new
                        {
                            Id = 2,
                            TitleName = "Service Desk"
                        },
                        new
                        {
                            Id = 3,
                            TitleName = "Head Of Department"
                        },
                        new
                        {
                            Id = 4,
                            TitleName = "CIO"
                        },
                        new
                        {
                            Id = 5,
                            TitleName = "CEO"
                        },
                        new
                        {
                            Id = 6,
                            TitleName = "Manager"
                        },
                        new
                        {
                            Id = 7,
                            TitleName = "Communicator"
                        },
                        new
                        {
                            Id = 8,
                            TitleName = "HR"
                        });
                });

            modelBuilder.Entity("EmployeeTitle", b =>
                {
                    b.Property<int>("EmployeesId")
                        .HasColumnType("int");

                    b.Property<int>("TitlesId")
                        .HasColumnType("int");

                    b.HasKey("EmployeesId", "TitlesId");

                    b.HasIndex("TitlesId");

                    b.ToTable("EmployeeTitle");
                });

            modelBuilder.Entity("Company.Data.Entities.Department", b =>
                {
                    b.HasOne("Company.Data.Entities.CompanyInfo", "company")
                        .WithMany()
                        .HasForeignKey("CompanyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("company");
                });

            modelBuilder.Entity("Company.Data.Entities.Employee", b =>
                {
                    b.HasOne("Company.Data.Entities.Department", "department")
                        .WithMany()
                        .HasForeignKey("DepartmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("department");
                });

            modelBuilder.Entity("Company.Data.Entities.EmployeeTitle", b =>
                {
                    b.HasOne("Company.Data.Entities.Employee", "employee")
                        .WithMany()
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Company.Data.Entities.Title", "title")
                        .WithMany()
                        .HasForeignKey("TitleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("employee");

                    b.Navigation("title");
                });

            modelBuilder.Entity("EmployeeTitle", b =>
                {
                    b.HasOne("Company.Data.Entities.Employee", null)
                        .WithMany()
                        .HasForeignKey("EmployeesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Company.Data.Entities.Title", null)
                        .WithMany()
                        .HasForeignKey("TitlesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
